generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  user_id      Int            @id @default(autoincrement())
  last_name    String?
  first_name   String?
  phone_number String?
  email        String?        @unique
  home_address String?
  password     String?
  savedTickets SavedTickets[] @relation("UserSavedTickets")
  orders       Orders[]
  tickets      Tickets[]
  wallet       Wallet?

  @@map("users")
}

model Tickets {
  ticket_id       Int            @id @default(autoincrement())
  ticket_type     String?
  ticket_title    String?
  ticket_category String?
  place           String?
  description     String?
  date            DateTime?
  ticket_price    Decimal?
  ticket_image    String?
  user_id         Int?
  ticket_status   String?
  savedTickets    SavedTickets[] @relation("TicketSavedTickets")
  orders          Orders[]
  user            Users?         @relation(fields: [user_id], references: [user_id])

  @@map("tickets")
}

model Wallet {
  recharged_date DateTime?
  wallet_balance Decimal?
  user_id        Int       @id
  user           Users     @relation(fields: [user_id], references: [user_id])

  @@map("wallet")
}

model Orders {
  ticket_id    Int
  user_id      Int
  ordered_date DateTime?
  ticket       Tickets   @relation(fields: [ticket_id], references: [ticket_id])
  user         Users     @relation(fields: [user_id], references: [user_id])

  @@id([ticket_id, user_id])
  @@map("orders")
}

model SavedTickets {
  id         Int      @id @default(autoincrement())
  user_id    Int
  ticket_id  Int
  created_at DateTime @default(now())
  ticket     Tickets  @relation("TicketSavedTickets", fields: [ticket_id], references: [ticket_id])
  user       Users    @relation("UserSavedTickets", fields: [user_id], references: [user_id])
}

model news {
  id         Int       @id @default(autoincrement())
  title      String
  summary    String
  content    String
  image_url  String?
  author     String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
}
